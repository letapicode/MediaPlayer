name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      SKIP_OFFLINE_TESTS: 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: ${{ runner.os }}-cmake-
      - uses: actions/setup-cmake@v3
      - name: Configure
        run: cmake -B build -S .
      - name: Build
        run: cmake --build build --config Release
      - name: Regression suite
        run: bash tests/run_regression_suite.sh
      - name: Run iOS tests
        if: matrix.os == 'macos-latest'
        run: xcodebuild test -scheme MediaPlayer -destination 'platform=iOS Simulator,name=iPhone 14'
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ctest-logs-${{ matrix.os }}
          path: build/Testing

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: ${{ runner.os }}-cmake-
      - uses: actions/setup-cmake@v3
      - name: Configure
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: Install clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-tidy clang-format
      - name: clang-tidy
        run: |
          find src -name '*.cpp' -o -name '*.h' | xargs clang-tidy --warnings-as-errors='*' -p build
      - name: clang-format check
        run: |
          find src -name '*.cpp' -o -name '*.h' | xargs clang-format --dry-run --Werror
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Prettier check
        run: npx prettier --check "src/**/*.qml" "src/**/*.js"
